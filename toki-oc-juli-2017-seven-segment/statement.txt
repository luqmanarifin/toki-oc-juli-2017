Tantangan Gebetan Radit


[Deskripsi]

Di suatu sore yang indah di Kota Bandung yang indah dan sejuk, Radit yang bosan dengan kehidupan kuliah yang sangat padat, mengajak gebetannya jalan-jalan. Bandung punya banyak objek wisata alam yang indah, juga pusat hiburan modern yang juga tak kalah megahnya dibanding ibukota Indonesia yang panas itu, sehingga Radit tidak akan pernah kehabisan tujuan.

Radit dan gebetannya sudah saling mengenal begitu lama! Mereka sudah sering bersama: nugas bersama, makan bersama, satu divisi di kepanitiaan yang sama, tempat tinggal mereka pun berdekatan sehingga sering pulang bersama. Tak jarang mereka berbagi pikiran, saling menyemangati ketika salah satu down, berbagi emosi, saling jujur satu sama lain.

Radit tidak mau hanya begini saja dengan gebetannya. Sebagai lelaki normal, ia berpikir untuk melanjutkan hubungan dengan sang gebetan ke jenjang berikutnya (read: berpacaran). Di dalam mobil, dalam perjalanan pulang, karena terjebak macet yang begitu parah (sigh, Bandung memang begitu!), Radit berpikir untuk mengutarakan perasaannya kepada sang gebetan.

Setelah confess, si gebetan yang ternyata mantan team inti ECM-EZPZ kampus tidak langsung berkata 'yes' atau 'no', tetapi malah memberikan sebuah tantangan yang harus diselesaikan untuk membuktikan bahwa Radit memang 'computationally handsome'. Jawaban si gebetan akan bergantung pada jawaban Radit.

Ketika memberi tantangan, gebetan Radit menoleh ke seven segment dekat traffic light.

Diberikan sebuah konfigurasi seven-segment yang terdiri dari beberapa digit. Untuk setiap digit, bisa saja seven-segment pada digit tersebut rusak atau berfungsi normal.

Apabila seven-segment pada digit berfungsi normal, maka segment yang hidup akan menunjukkan konfigurasi seven-segment yang sebenarnya. Segment pada digit yang berfungsi normal belum tentu merepresentasikan angka yang benar.

Apabila seven-segment pada digit tersebut rusak, maka segment yang padam bisa jadi sebenarnya hidup (tetapi rusak sehingga padam). Segment yang hidup akan tetap hidup selamanya.

Aturan penulisan bilangan mengikuti kaidah biasanya. Seperti: tidak boleh ada leading-zero kecuali angka nol, penulisan digit rata kanan, seluruh digit pada seven-segment harus padam sebelum digit pertama. 

Radit diminta menentukan ada berapa banyak angka berbeda yang mungkin dipresentasikan seven-segment tersebut.

Radit grogi. Tangannya bergetar. Suaranya gamang. Dia tidak bisa berpikir jernih. Kalian adalah programmer handal, bantu Radit menyelesaikan tantangan gebetannya!

{seven-segment.png}
Gambar 1 Aturan posisi segment

{segment3.gif}
Gambar 2 Konvensi digit seven-segment. Angka pada segment mengikuti konvensi di atas.

[Format Masukan]

Baris pertama berisi sebuah bilangan bulat N. Banyak digit pada konfigurasi seven-segment.

Baris kedua berisi sebuah string dengan panjang N karakter yang hanya berisi '0' atau '1'. Apabila karakter ke-i berisi '1', maka seven-segment pada digit ke-i berfungsi normal. Apabila '0', maka seven-segment pada digit tersebut rusak.  

Baris ketiga hingga baris N+2 berisi 7 buah karakter antara '0' atau '1'.
Karakter-karakter pada baris ke-(i+2) mewakili digit ke-i (one-based).
Masing-masing baris terdiri dari tujuh karakter, mewakili seven-segment pada digit yang bersangkutan.

Dalam satu baris:
karakter pertama mewakili segment pada posisi A.
karakter kedua mewakili segment pada posisi B.
karakter ketiga mewakili segment pada posisi C.
dst.
Apabila karakter berisi '0', artinya segment tersebut padam.
Apabila karakter berisi '1', artinya segment tersebut nyala.  

Ingat, bahwa angka yang mungkin dipresentasikan juga bergantung pada apakah digit tersebut berfungsi normal atau rusak.



[Format Keluaran]

Sebuah bilangan bulat yang menyatakan banyaknya angka berbeda yang mungkin direpresentasikan, dimodulo dengan 10^9 + 8.


[Contoh Masukan 1]
2
01
0 0 0 0 0 0 0
1 1 1 1 1 1 0

[Contoh Keluaran 1]
10


[Contoh Masukan 2]
3
110
1 1 1 1 1 1 0
1 1 1 1 1 1 0
0 1 1 0 0 0 0

[Contoh Keluaran 2]
0


[Contoh Masukan 3]
2
01
1 1 1 1 1 1 1
0 0 0 0 0 0 0

[Contoh Keluaran 3]
0

[Contoh Masukan 4]
2
00
1 1 1 1 1 1 0
1 1 1 1 1 1 0

[Contoh Keluaran 4]
2


[Contoh Masukan 5]
1
1
1 0 0 0 0 0 0

[Contoh Keluaran 5]
0

[Contoh Masukan 6]
7
1001010
0 0 0 0 0 0 0
0 0 0 0 0 0 0
0 0 0 0 0 0 0
0 1 1 0 0 0 0
1 1 1 1 1 1 0
1 1 1 1 1 1 1
0 0 0 0 0 0 0

[Contoh Keluaran 6]
2000

[Penjelasan]
Pada contoh pertama, digit pertama rusak dan digit kedua berfungsi normal. Digit pertama rusak dan semua segment padam. Digit pertama bisa saja merepresentasikan seluruh angka 0-9, juga angka 'kosong'. Karena digit kedua berfungsi normal, pasti digit kedua merepresentasikan angka 0. Angka yang mungkin direpresentasikan adalah 0, 10, 20, 30, 40, 50, 60, 70, 80, 90. Perhatikan bahwa '00' bukan angka yang valid. Serta representasi digit pertama pada angka '0' adalah seven-segment 'kosong'. 

Pada contoh kedua, digit pertama berfungsi normal dan hanya bisa merepresentasikan angka nol. Perhatikan bahwa leading zero tidak valid. Tidak ada angka yang bisa direpresentasikan.

Pada contoh ketiga, digit terakhir berfungsi normal dan hanya bisa merepresentasikan angka 'kosong'. Tidak ada angka yang mempunyai 'angka kosong' di digit terakhir, sehingga tidak ada angka yang dapat direpresentasikan.

Pada contoh keempat, kedua digit rusak. Segment yang padam bisa saja sebenarnya nyala. Angka yang dapat direpresentasikan adalah 80 dan 88.

Pada contoh kelima, digit berfungsi normal tapi tidak merepresentasikan angka apapun. 

[Batasan]
1 ≤ N ≤ 100.000
